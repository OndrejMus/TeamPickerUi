@inject ITeamStorage teamStorage
@using TeamPickerUi.Models


<div class="flex-item" style="border-color: @Member.MemberColorHex;">
    <h5>@Member.Name <button class="button" onclick="@DeleteMember">X</button></h5>
    
    <p>@Member.Rating (W:L @Member.WinCount:@Member.LossCount)</p>
</div>



@code {

    [Parameter]
    public MemberModel Member { get; set; }

    protected override void OnInitialized()
    {
        teamStorage.StorageUpdated += UpdateUi;
    }

    private void UpdateUi()
    {
        // Update UI logic here
        StateHasChanged();
    }

    // Don't forget to unsubscribe when the component is disposed
    public void Dispose()
    {
        teamStorage.StorageUpdated -= UpdateUi;
    }

    public void DeleteMember()
    {
        teamStorage.DeleteMember(Member);
    }

}
