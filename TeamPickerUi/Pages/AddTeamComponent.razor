@inject ITeamStorage teamStorage

<h3>Add team</h3>

<EditForm Model="team" OnValidSubmit="@AddTeam" >
    <FluentValidationValidator TValidator="Validation_Team" />
    <ValidationSummary />

    <label for="teamName">Team picker:</label>
    <InputText id="teamName" @bind-Value="team.Name" autocomplete="off" ></InputText><br>

    @* <label for="memberName">Member name:</label>
    <input type="text" @ref="nameInputRef" placeholder="Set member name" id="memberName" @bind="member.Name" autocomplete="off"><br> *@
    @* maxlength="30" *@

   @* https://www.w3schools.com/howto/howto_html_colorpicker.asp *@

   @*  <label for="teamColor">Team color:</label>
    <input type="color" id="teamColor" @bind-value="@team.BackgroundColorHexString"><br>

    <label for="teamColorAlpha">Team color alpha:</label>
    <input type="range" min="0" max="255" step="1" @bind-value="team.BackgroundColorAlhpaHexString" class="slider" id="teamColorAlpha"><br> *@
    
    <TeamPickerUi.Components.ColorPicker.ColorPickerComponent Alpha="128" RandomColor=true @bind-ColorHex="team.TeamColorHex" />

    <button type="submit" class="btn btn-primary">Add</button>

</EditForm>


@code {
    private TeamModel team;
    private ElementReference nameInputRef;

    protected override void OnInitialized()
    {
        team = new TeamModel(teamStorage);
        base.OnInitialized();
    }

    private async Task AddTeam()
    {
        teamStorage.AddTeam(team);
        
        team = new TeamModel(teamStorage);
        
        //await nameInputRef.FocusAsync();
    }

}
